name: ci
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: ${{ steps.cache.outputs.PACKAGE }}
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload webpack stats file
        uses: relative-ci/agent-upload-artifact-action@v1
        with:
          webpackStatsFile: ./packages/html-templates/artifacts/webpack-stats.json

      - name: Upload build files
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          retention-days: 1
          # add glob on the first directory to force paths relative to current directory
          path: |
            packages*/*/lib/**
            packages*/*/lib-esm/**
            packages*/*/dist/**
            packages*/*/types/**

  lint:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: ${{ steps.cache.outputs.PACKAGE }}
          cache-dependency-path: "**/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Lint
        run: npm run lint

  test:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Test
        run: npm test

  test-webpack-plugin-build:
    needs:
      - build
    strategy:
      matrix:
        version: [20, 18, 16, 14]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ matrix.version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          registry-url: 'https://registry.npmjs.org'

      - name: Install Node ${{ matrix.version }} dependencies
        run: npm install

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Test build
        run: npm run test:build
        working-directory: packages/webpack-plugin
        continue-on-error: true

  test-cli-build:
    needs:
      - build
    strategy:
      matrix:
        version: [20, 18, 16, 14]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ matrix.version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          registry-url: 'https://registry.npmjs.org'

      - name: Install Node ${{ matrix.version }} dependencies
        run: npm install

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Test build
        run: npm run test:build
        working-directory: packages/cli

  test-e2e:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Report E2E tests - install dependencies
        working-directory: packages/cli
        run: npx playwright install --with-deps

      - name: Report E2E tests - run
        working-directory: packages/cli
        run: npm run test:e2e

      - name: Report E2E tests - upload screenshots
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        continue-on-error: true
        working-directory: packages/cli
        run: node node_modules/.bin/argos upload ./screenshots

  publish:
    needs:
      - test
      - test-e2e
      - test-webpack-plugin-build
      - test-cli-build
      - lint

    if: contains(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
          registry-url: 'https://registry.npmjs.org'

      - name: Install monorepo dependencies
        run: npm ci

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - run: npm run release
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
